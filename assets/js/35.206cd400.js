(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{423:function(t,a,n){"use strict";n.r(a);var s=n(44),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"transaction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#transaction"}},[t._v("#")]),t._v(" Transaction")]),t._v(" "),n("h2",{attrs:{id:"introdunction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introdunction"}},[t._v("#")]),t._v(" Introdunction")]),t._v(" "),n("p",[t._v("The transaction function realizes that DML statements are submitted in batches to improve the execution efficiency of large batches of DML statements and ensure transaction consistency ("),n("code",[t._v("in the same batch")]),t._v(").")]),t._v(" "),n("p",[t._v("The following details the configuration method and the rollback differences involved.")]),t._v(" "),n("h2",{attrs:{id:"config"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[t._v("#")]),t._v(" Config")]),t._v(" "),n("p",[t._v("Add the parameter "),n("code",[t._v("--trans=?")]),t._v(" when calling goInception, where the parameter value is a number,")]),t._v(" "),n("ul",[n("li",[t._v("The default is 0, that is, do not open the transaction (commit row by row)")]),t._v(" "),n("li",[t._v("When it is greater than 1, it will be submitted in batches according to this parameter, such as 500, it will be submitted once according to 500 DML")])]),t._v(" "),n("h3",{attrs:{id:"demo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" pymysql\n\nsql "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''/*--host=127.0.0.1;--port=3306;--user=test;--password=test;\\\n--execute=1;--backup=1;--ignore-warnings=1;--trans=100;*/\ninception_magic_start;\nuse test_inc;\n\n-- drop table if exists t1;\ncreate table t1 (id int primary key,c1 int ,c2 varchar(100));\n\ninsert into t1 values(1,2,'ccc');\ninsert into t1 values(2,2,'ccc');\ninsert into t1 values(3,3,'ccc');\ninsert into t1 values(4,2,'ccc');\ninsert into t1 values(5,2,'ccc');\n\ninception_magic_commit;'''")]),t._v("\n\nconn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pymysql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("host"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'127.0.0.1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" passwd"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                       db"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" port"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" charset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8mb4"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncur "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cursor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nret "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fetchall"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncur"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" row "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("row"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"execute"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#execute"}},[t._v("#")]),t._v(" Execute")]),t._v(" "),n("ul",[n("li",[t._v("Commit row by row before opening the transaction")]),t._v(" "),n("li",[t._v("After opening the transaction, submit according to the set number. If set to 500, 500 DMLs will be submitted once")]),t._v(" "),n("li",[t._v("DDL execution is not affected by the transaction function, and like MySQL, it is independent of a transaction")]),t._v(" "),n("li",[t._v("When the transaction fails to commit, it will "),n("code",[t._v("roll back the batch of SQL")]),t._v(" and terminate it immediately (all executed SQL will generate a rollback statement, so that it can be rolled back quickly if necessary)")])]),t._v(" "),n("p",[t._v("If there are DDL statements in the transaction, DML will be automatically submitted, so "),n("code",[t._v("mixing DDL and DML will not affect this function")]),t._v(".")])])}),[],!1,null,null,null);a.default=e.exports}}]);