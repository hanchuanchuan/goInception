name: Go
on:
  push:
    branches:
    - master
    - release/*
  pull_request:
      
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:


    - name: show mysql info
      run: |
        mysql -h|grep my.cnf
        ll /etc/my*

    - name: show mysql info
      run: |
        sudo service mysql stop || true
        echo '[mysqld]'            | sudo tee /etc/my.cnf
        echo 'server-id=111'         | sudo tee -a /etc/my.cnf
        echo 'log-bin=on'       | sudo tee -a /etc/my.cnf
        echo 'binlog-format = row' | sudo tee -a /etc/my.cnf
        echo 'gtid-mode = ON'      | sudo tee -a /etc/my.cnf
        echo 'enforce_gtid_consistency = ON' | sudo tee -a /etc/my.cnf
        echo 'lower_case_table_names = 1' | sudo tee -a /etc/my.cnf
        echo 'character_set_server = utf8' | sudo tee -a /etc/my.cnf

      - name: Startup MySQL
      run: |
        sudo service mysql start || true
        sudo tail -100 /var/log/syslog
        sudo tail -100 /var/log/mysql/error.log

    - name: show mysql info
      run: |
        mysql -uroot -p'root' -e "select version()"
        mysql -uroot -p'root' -e "show variables like '%data%';"
        mysql -uroot -p'root' -e "show variables like '%dir%';"
        mysql -uroot -p'root' -e "show variables like '%log%';"
        mysql -uroot -p'root' -e "show variables like '%buffer_pool%'"
        mysql -uroot -p'root' -e "create database if not exists test DEFAULT CHARACTER SET utf8mb4;create database if not exists test_inc DEFAULT CHARACTER SET utf8mb4;"
        mysql -uroot -p'root' -e "grant all on *.* to test@'127.0.0.1' identified by 'test';FLUSH PRIVILEGES;"
        mysql -uroot -p'root' -e "show databases;show variables like 'explicit_defaults_for_timestamp';"

      
    - name: show mysql info
      run: sudo ps -ef|grep mysql

    - name: Shutdown Ubuntu MySQL (SUDO)
      run: sudo service mysql stop 
    
    - name: Startup MySQL
      run: sudo /usr/sbin/mysqld --daemonize --pid-file=/run/mysqld/mysqld.pid --lower_case_table_names=1 --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --log-bin=on --server_id=111 --explicit_defaults_for_timestamp=1 || tail -n100 /var/log/messages


  
    # - name: Setup MySQL
    #   uses: samin/mysql-action@v1
    #   with:
    #     host port: 3306 # Optional, default value is 3306. The port of host
    #     container name: mysql
    #     container label: mysql
    #     container port: 3306 
    #     character set server: 'utf8mb4'
    #     collation server: 'utf8_general_ci' 
    #     lower case table names: 1
    #     log bin: 1
    #     server id: 111
    #     binlog format: 'row'
    #     gtid mode: 1
    #     bind address: '*' 
    #     enforce gtid consistency: 1
    #     skip name resolve: 1
    #     mysql version: '5.7' 
    #     mysql database: 'test' 
    #     mysql root password: 'root' 
    #     mysql user: 'test' 
    #     mysql password: 'test' 

    - name: docker ps
      run: |
        date "+%Y-%m-%d %H:%M:%S"
        docker ps        
        # docker logs $(docker ps -q)         
      
    - name: Waiting for MySQL to be ready
      run: |
        sleep 2
        for i in `seq 1 10`;
        do
          nc -z 127.0.0.1 3306 && echo Success && exit 0
          echo -n .
          sleep 2
        done
        echo Failed waiting for MySQL && exit 1
     
    - name: Init MySQL
      run: |
        date "+%Y-%m-%d %H:%M:%S"
        sleep 5
        date "+%Y-%m-%d %H:%M:%S"        
        
        mysql -h 127.0.0.1 -P 3306  -u test -p'test' -e "show variables like '%buffer_pool%'"
        mysql -h 127.0.0.1 -P 3306  -u root -p'root' -e "select version();create database if not exists test_inc DEFAULT CHARACTER SET utf8;grant all on *.* to test@'127.0.0.1' identified by 'test';FLUSH PRIVILEGES;show databases;show variables like 'explicit_defaults_for_timestamp';"
        sudo tail -100 /var/log/mysql/error.log

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: "Build & Test"
      run: make dev
